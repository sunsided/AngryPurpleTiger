using System.Collections;

namespace AngryPurpleTiger;

public sealed class Animals : IEnumerable<string>
{
#if NET7_0_OR_GREATER
    private static readonly System.Collections.Immutable.ImmutableList<string> DefaultWords = System.Collections.Immutable.ImmutableList.Create<string>(
#else
    private static readonly List<string> DefaultWords = new ()
    {
#endif
        "alligator",
        "bee",
        "bird",
        "camel",
        "cat",
        "cheetah",
        "chicken",
        "cow",
        "dog",
        "corgi",
        "eagle",
        "elephant",
        "fish",
        "fox",
        "toad",
        "giraffe",
        "hippo",
        "kangaroo",
        "kitten",
        "lobster",
        "monkey",
        "octopus",
        "pig",
        "puppy",
        "rabbit",
        "rat",
        "scorpion",
        "seal",
        "sheep",
        "snail",
        "spider",
        "tiger", // Known duplicate: Also used as a color, see https://github.com/helium/angry-purple-tiger/issues/6
        "turtle",
        "newt",
        "tadpole",
        "frog",
        "tarantula",
        "albatross",
        "blackbird",
        "canary",
        "crow",
        "cuckoo",
        "dove",
        "pigeon",
        "falcon",
        "finch",
        "flamingo",
        "goose",
        "seagull",
        "hawk",
        "jay",
        "mockingbird",
        "kestrel",
        "kookaburra",
        "mallard",
        "nightingale",
        "nuthatch",
        "ostrich",
        "owl",
        "parakeet",
        "parrot",
        "peacock",
        "pelican",
        "penguin",
        "pheasant",
        "piranha",
        "raven",
        "robin",
        "rooster",
        "sparrow",
        "stork",
        "swallow",
        "swan",
        "swift", // Known duplicate: Also used as an attribute, see https://github.com/helium/angry-purple-tiger/issues/6
        "turkey",
        "vulture",
        "woodpecker",
        "wren",
        "butterfly",
        "barbel",
        "carp",
        "cod",
        "crab",
        "eel",
        "goldfish",
        "haddock",
        "halibut",
        "jellyfish",
        "perch",
        "pike",
        "mantaray",
        "salmon",
        "sawfish",
        "scallop",
        "shark",
        "shell",
        "shrimp",
        "trout",
        "ant",
        "aphid",
        "beetle",
        "caterpillar",
        "dragonfly",
        "cricket",
        "fly",
        "grasshopper",
        "ladybug",
        "millipede",
        "moth",
        "wasp",
        "anteater",
        "antelope",
        "armadillo",
        "badger",
        "bat",
        "beaver",
        "bull",
        "chimpanzee",
        "dachshund",
        "deer",
        "dolphin",
        "elk",
        "moose",
        "gazelle",
        "gerbil",
        "goat",
        "bear",
        "hamster",
        "hare",
        "hedgehog",
        "horse",
        "hyena",
        "lion",
        "llama",
        "lynx",
        "mammoth", // Known duplicate: Also used as an attribute, see https://github.com/helium/angry-purple-tiger/issues/6
        "marmot",
        "mink",
        "mole",
        "mongoose",
        "mouse",
        "mule",
        "otter",
        "panda",
        "platypus",
        "pony",
        "porcupine",
        "puma",
        "raccoon",
        "reindeer",
        "rhino",
        "skunk",
        "sloth",
        "squirrel",
        "weasel",
        "snake",
        "wolf",
        "zebra",
        "boa",
        "chameleon",
        "copperhead",
        "cottonmouth",
        "crocodile",
        "rattlesnake",
        "gecko",
        "iguana",
        "lizard",
        "python",
        "salamander",
        "sidewinder",
        "whale",
        "tortoise",
        "lemur",
        "rook",
        "koala",
        "donkey",
        "ferret",
        "tardigrade",
        "orca",
        "okapi",
        "liger",
        "unicorn",
        "dragon",
        "squid",
        "ape",
        "gorilla",
        "baboon",
        "cormorant",
        "mantis",
        "tapir",
        "capybara",
        "pangolin",
        "opossum",
        "wombat",
        "aardvark",
        "starfish",
        "shetland",
        "narwhal",
        "worm",
        "hornet",
        "viper",
        "stallion",
        "jaguar",
        "panther",
        "bobcat",
        "leopard",
        "osprey",
        "cougar",
        "dalmatian",
        "terrier",
        "duck",
        "sealion",
        "raccoon", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "chipmunk",
        "loris",
        "poodle",
        "orangutan",
        "gibbon",
        "meerkat",
        "huskie",
        "barracuda",
        "bison",
        "caribou",
        "chinchilla",
        "coyote",
        "crane",
        "dinosaur",
        "lark",
        "griffin",
        "yeti",
        "troll",
        "seahorse",
        "walrus",
        "yak",
        "wolverine",
        "boar",
        "alpaca",
        "porpoise",
        "manatee",
        "guppy",
        "condor",
        "cyborg",
        "cobra",
        "locust",
        "mandrill",
        "oyster",
        "urchin",
        "quail",
        "sardine",
        "ram",
        "starling",
        "wallaby",
        "buffalo",
        "goblin",
        "tuna",
        "mustang"
#if NET7_0_OR_GREATER
    );
#else
    };
#endif

    /// <summary>
    ///     Gets the default animals.
    /// </summary>
    /// <remarks>
    ///     Note that this contains some repeated entries, as well as entries that
    ///     overlap with <see cref="Adjectives"/> and <see cref="Colors"/>.
    ///     This is a known issue in the upstream implementation. For more information,
    ///     see <a href="https://github.com/helium/angry-purple-tiger/issues/6">helium/angry-purple-tiger#6</a>.
    /// </remarks>
    public static Animals Default { get; } = new ();

    /// <summary>
    ///     Gets the number of words in this set.
    /// </summary>
    public int Count => DefaultWords.Count;

    /// <summary>
    ///     Gets the word at the specified index.
    /// </summary>
    /// <param name="index">The word index.</param>
    public string this[byte index] => DefaultWords[index];

    /// <inheritdoc />
    public IEnumerator<string> GetEnumerator() => DefaultWords.GetEnumerator();

    /// <inheritdoc />
    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}
