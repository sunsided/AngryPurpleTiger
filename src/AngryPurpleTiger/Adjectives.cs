using System.Collections;

namespace AngryPurpleTiger;

public sealed class Adjectives : IEnumerable<string>
{
#if NET7_0_OR_GREATER
    private static readonly System.Collections.Immutable.ImmutableList<string> DefaultWords = System.Collections.Immutable.ImmutableList.Create<string>(
#else
    private static readonly List<string> DefaultWords = new ()
    {
#endif
        "attractive",
        "bald",
        "beautiful",
        "rare",
        "clean",
        "dazzling",
        "lucky",
        "elegant",
        "fancy",
        "fit",
        "fantastic",
        "glamorous",
        "gorgeous",
        "handsome",
        "long",
        "magnificent",
        "muscular",
        "plain",
        "able",
        "quaint",
        "scruffy",
        "innocent",
        "short",
        "skinny",
        "acrobatic",
        "tall",
        "proper",
        "alert",
        "lone",
        "agreeable",
        "ambitious",
        "brave",
        "calm",
        "delightful",
        "eager",
        "faithful",
        "gentle",
        "happy",
        "jolly",
        "kind",
        "lively",
        "nice",
        "obedient",
        "polite",
        "proud",
        "silly",
        "thankful",
        "winning",
        "witty",
        "wonderful",
        "zealous",
        "expert",
        "amateur",
        "clumsy",
        "amusing",
        "vast",
        "fierce",
        "real",
        "helpful",
        "itchy",
        "atomic",
        "basic",
        "mysterious",
        "blurry",
        "perfect",
        "best",
        "powerful",
        "interesting",
        "decent",
        "wild",
        "jovial",
        "genuine",
        "broad",
        "brisk",
        "brilliant",
        "curved",
        "deep",
        "flat",
        "high",
        "hollow",
        "low",
        "narrow",
        "refined",
        "round",
        "shallow",
        "skinny", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "square",
        "steep",
        "straight",
        "wide",
        "big",
        "colossal",
        "clever",
        "gigantic",
        "great",
        "huge",
        "immense",
        "large",
        "little",
        "mammoth",
        "massive",
        "micro",
        "mini",
        "petite",
        "puny",
        "scrawny",
        "short", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "small",
        "polished",
        "teeny",
        "tiny",
        "crazy",
        "dancing",
        "custom",
        "faint",
        "harsh",
        "formal",
        "howling",
        "loud",
        "melodic",
        "noisy",
        "upbeat",
        "quiet",
        "dandy",
        "raspy",
        "rhythmic",
        "daring",
        "zany",
        "digital",
        "dizzy",
        "exotic",
        "fun",
        "furry",
        "hidden",
        "ancient",
        "brief",
        "early",
        "fast",
        "future",
        "late",
        "long", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "modern",
        "old",
        "prehistoric",
        "zesty",
        "rapid",
        "short", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "slow",
        "swift",
        "young",
        "acidic",
        "bitter",
        "cool",
        "creamy",
        "keen",
        "tricky",
        "fresh",
        "special",
        "unique",
        "hot", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "magic",
        "main",
        "nutty",
        "pet",
        "mythical",
        "ripe",
        "wobbly",
        "salty",
        "savory",
        "sour",
        "spicy",
        "bright",
        "stale",
        "sweet",
        "tangy",
        "tart",
        "rich",
        "rural",
        "urban",
        "breezy",
        "bumpy",
        "chilly",
        "cold",
        "cool", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "cuddly",
        "damaged",
        "damp",
        "restless",
        "dry",
        "flaky",
        "fluffy",
        "virtual",
        "merry",
        "hot",
        "icy",
        "shiny",
        "melted",
        "joyous",
        "rough",
        "shaggy",
        "sharp",
        "radiant",
        "sticky",
        "strong",
        "soft",
        "uneven",
        "warm",
        "feisty",
        "cheery",
        "energetic",
        "abundant",
        "macho",
        "glorious",
        "mean",
        "quick",
        "precise",
        "stable",
        "spare",
        "sunny",
        "trendy",
        "shambolic",
        "striped",
        "boxy",
        "generous",
        "tame",
        "joyful",
        "festive",
        "bubbly",
        "soaring",
        "orbiting",
        "sparkly",
        "smooth",
        "docile",
        "original",
        "electric",
        "funny",
        "passive",
        "active",
        "cheesy",
        "tangy", // Known duplicate, see https://github.com/helium/angry-purple-tiger/issues/6
        "blunt",
        "dapper",
        "bent",
        "curly",
        "oblong",
        "sneaky",
        "overt",
        "careful",
        "jumpy",
        "bouncy",
        "recumbent",
        "cheerful",
        "droll",
        "odd",
        "suave",
        "sleepy"
#if NET7_0_OR_GREATER
    );
#else
    };
#endif

    /// <summary>
    ///     Gets the default adjectives.
    /// </summary>
    /// <remarks>
    ///     Note that this contains some repeated entries. This is a known
    ///     issue in the upstream implementation. For more information,
    ///     see <a href="https://github.com/helium/angry-purple-tiger/issues/6">helium/angry-purple-tiger#6</a>.
    /// </remarks>
    public static Adjectives Default { get; } = new ();

    /// <summary>
    ///     Gets the number of words in this set.
    /// </summary>
    public int Count => DefaultWords.Count;

    /// <summary>
    ///     Gets the word at the specified index.
    /// </summary>
    /// <param name="index">The word index.</param>
    public string this[byte index] => DefaultWords[index];

    /// <inheritdoc />
    public IEnumerator<string> GetEnumerator() => DefaultWords.GetEnumerator();

    /// <inheritdoc />
    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}
